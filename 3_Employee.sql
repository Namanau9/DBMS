--CREATION

CREATE TABLE EMPLOYEE
(
  SSN NUMBER(10) PRIMARY KEY,
  NAME VARCHAR(20),
  ADDRESS VARCHAR(30),
  GENDER CHAR(1),
  SALARY NUMBER(10,2),
  SUPERSSN NUMBER(10) REFERENCES EMPLOYEE(SSN) ON DELETE CASCADE
);

CREATE TABLE DEPARTMENT
(
  DNO NUMBER(3) PRIMARY KEY,
  DNAME VARCHAR(20),
  MGRSSN REFERENCES EMPLOYEE(SSN) ON DELETE CASCADE,
  MGRSTARTDATE DATE
);

ALTER TABLE EMPLOYEE 
ADD DNO REFERENCES DEPARTMENT(DNO) ON DELETE CASCADE;

CREATE TABLE DLOCATION (
  DNO REFERENCES DEPARTMENT(DNO) ON DELETE CASCADE,
  DLOC VARCHAR(20),
  PRIMARY KEY (DNO, DLOC)
);

CREATE TABLE PROJECT (
  PNO NUMBER(3) PRIMARY KEY,
  PNAME VARCHAR(20),
  PLOCATION VARCHAR(20),
  DNO REFERENCES DEPARTMENT(DNO) ON DELETE CASCADE
);

CREATE TABLE WORKS_ON (
  SSN REFERENCES EMPLOYEE(SSN) ON DELETE CASCADE,
  PNO REFERENCES PROJECT(PNO) ON DELETE CASCADE,
  HOURS NUMBER(3),
  PRIMARY KEY (SSN, PNO)
);









--INSERTION

INSERT INTO EMPLOYEE (SSN, NAME, ADDRESS, GENDER, SALARY)
VALUES (123456789, 'Asha', 'Bangalore', 'F', 50000);

INSERT INTO EMPLOYEE (SSN, NAME, ADDRESS, GENDER, SALARY)
VALUES (234567891, 'Sheela', 'Hassan', 'F', 45000);

INSERT INTO EMPLOYEE (SSN, NAME, ADDRESS, GENDER, SALARY)
VALUES (345678912, 'Pallavi', 'Bangalore', 'F', 60000);

INSERT INTO EMPLOYEE (SSN, NAME, ADDRESS, GENDER, SALARY)
VALUES (456789123, 'Shreyas', 'Mysore', 'M', 120000);

INSERT INTO EMPLOYEE (SSN, NAME, ADDRESS, GENDER, SALARY)
VALUES (567891234, 'Mohan', 'Bangalore', 'M', 18000);

INSERT INTO EMPLOYEE (SSN, NAME, ADDRESS, GENDER, SALARY)
VALUES (678912345, 'Scott', 'Bangalore', 'M', 50000);

INSERT INTO EMPLOYEE (SSN, NAME, ADDRESS, GENDER, SALARY)
VALUES (789123456, 'Divya', 'Bangalore', 'F', 65000);

INSERT INTO EMPLOYEE (SSN, NAME, ADDRESS, GENDER, SALARY)
VALUES (891234567, 'Sapna', 'Bangalore', 'F', 50000);

INSERT INTO EMPLOYEE (SSN, NAME, ADDRESS, GENDER, SALARY)
VALUES (912345678, 'Revan', 'Hubli', 'M', 10000);

INSERT INTO EMPLOYEE (SSN, NAME, ADDRESS, GENDER, SALARY)
VALUES (113489567, 'Alice', 'Mysore', 'F', 65000);

INSERT INTO EMPLOYEE (SSN, NAME, ADDRESS, GENDER, SALARY)
VALUES (112456789, 'Manoj', 'Mysore', 'M', 25000);

INSERT INTO EMPLOYEE (SSN, NAME, ADDRESS, GENDER, SALARY)
VALUES (101234567, 'Jhon', 'Hubli', 'M', 20000);





INSERT INTO DEPARTMENT (DNO, DNAME, MGRSSN, MGRSTARTDATE)
VALUES (1, 'CSE', 123456789, TO_DATE('01-JAN-2010', 'DD-MON-YYYY'));

INSERT INTO DEPARTMENT (DNO, DNAME, MGRSSN, MGRSTARTDATE)
VALUES (2, 'ISE', 234567891, TO_DATE('15-FEB-2011', 'DD-MON-YYYY'));

INSERT INTO DEPARTMENT (DNO, DNAME, MGRSSN, MGRSTARTDATE)
VALUES (3, 'ECE', 345678912, TO_DATE('01-MAR-2012', 'DD-MON-YYYY'));

INSERT INTO DEPARTMENT (DNO, DNAME, MGRSSN, MGRSTARTDATE)
VALUES (4, 'Accounts', 456789123, TO_DATE('15-APR-2013', 'DD-MON-YYYY'));

INSERT INTO DEPARTMENT (DNO, DNAME, MGRSSN, MGRSTARTDATE)
VALUES (5, 'Research', 567891234, TO_DATE('02-MAY-2014', 'DD-MON-YYYY'));

INSERT INTO DEPARTMENT (DNO, DNAME, MGRSSN, MGRSTARTDATE)
VALUES (6, 'AIML', 678912345, TO_DATE('15-JUN-2015', 'DD-MON-YYYY'));




UPDATE EMPLOYEE SET SUPERSSN = NULL,        DNO = 1 WHERE SSN = 123456789;
UPDATE EMPLOYEE SET SUPERSSN = 123456789,   DNO = 2 WHERE SSN = 234567891;
UPDATE EMPLOYEE SET SUPERSSN = NULL,        DNO = 3 WHERE SSN = 345678912;
UPDATE EMPLOYEE SET SUPERSSN = NULL,        DNO = 4 WHERE SSN = 456789123;
UPDATE EMPLOYEE SET SUPERSSN = NULL,        DNO = 6 WHERE SSN = 567891234;
UPDATE EMPLOYEE SET SUPERSSN = NULL,        DNO = 6 WHERE SSN = 678912345;
UPDATE EMPLOYEE SET SUPERSSN = 345678912,   DNO = 3 WHERE SSN = 789123456;
UPDATE EMPLOYEE SET SUPERSSN = 345678912,   DNO = 3 WHERE SSN = 891234567;
UPDATE EMPLOYEE SET SUPERSSN = 345678912,   DNO = 3 WHERE SSN = 912345678;
UPDATE EMPLOYEE SET SUPERSSN = 345678912,   DNO = 3 WHERE SSN = 113489567;
UPDATE EMPLOYEE SET SUPERSSN = 345678912,   DNO = 3 WHERE SSN = 112456789;
UPDATE EMPLOYEE SET SUPERSSN = 456789123,   DNO = 4 WHERE SSN = 101234567;


INSERT INTO DLOCATION (DNO, DLOC) VALUES (1, 'Bangalore');
INSERT INTO DLOCATION (DNO, DLOC) VALUES (2, 'Hubli');
INSERT INTO DLOCATION (DNO, DLOC) VALUES (3, 'Mysore');
INSERT INTO DLOCATION (DNO, DLOC) VALUES (4, 'Hassan');
INSERT INTO DLOCATION (DNO, DLOC) VALUES (5, 'Bangalore');
INSERT INTO DLOCATION (DNO, DLOC) VALUES (6, 'Bangalore');




INSERT INTO PROJECT (PNO, PNAME, PLOCATION, DNO) VALUES (11, 'Java', 'Bangalore', 1);
INSERT INTO PROJECT (PNO, PNAME, PLOCATION, DNO) VALUES (22, 'DotNet', 'Hassan', 2);
INSERT INTO PROJECT (PNO, PNAME, PLOCATION, DNO) VALUES (33, 'IOT', 'Bangalore', 3);
INSERT INTO PROJECT (PNO, PNAME, PLOCATION, DNO) VALUES (44, 'Android', 'Mysore', 4);
INSERT INTO PROJECT (PNO, PNAME, PLOCATION, DNO) VALUES (55, 'Big Data', 'Hubli', 5);
INSERT INTO PROJECT (PNO, PNAME, PLOCATION, DNO) VALUES (66, 'Web', 'Bangalore', 6);
INSERT INTO PROJECT (PNO, PNAME, PLOCATION, DNO) VALUES (77, 'ML', 'Mysore', 5);


INSERT INTO WORKS_ON (SSN, PNO, HOURS) VALUES (678912345, 11, 30);
INSERT INTO WORKS_ON (SSN, PNO, HOURS) VALUES (123456789, 22, 30);
INSERT INTO WORKS_ON (SSN, PNO, HOURS) VALUES (234567891, 33, 40);
INSERT INTO WORKS_ON (SSN, PNO, HOURS) VALUES (678912345, 44, 20);
INSERT INTO WORKS_ON (SSN, PNO, HOURS) VALUES (345678912, 55, 50);
INSERT INTO WORKS_ON (SSN, PNO, HOURS) VALUES (456789123, 66, 60);
INSERT INTO WORKS_ON (SSN, PNO, HOURS) VALUES (345678912, 77, 60);

--a. Convert employee name into uppercase whenever a record is inserted or updated:

CREATE TRIGGER EMPLOYEE_NAME_UPPER
BEFORE INSERT OR UPDATE ON EMPLOYEE
FOR EACH ROW
BEGIN
    :NEW.Name := UPPER(:NEW.Name);
END;

--b. Make a list of all project numbers for projects involving an employee named 'Scott':

SELECT DISTINCT P.PNO
FROM PROJECT P, DEPARTMENT D, EMPLOYEE E
WHERE E.NAME = 'Scott' AND E.SSN = D.MGRSSN AND D.DNO = P.DNO

UNION

SELECT DISTINCT P.PNO
FROM PROJECT P, WORKS_ON W, EMPLOYEE E
WHERE E.NAME = 'Scott' AND E.SSN = W.SSN AND P.PNO = W.PNO;

--c. Show the resulting salaries if every employee working on the ‘IoT’ project is given a 10% raise:

SELECT E.Name, 1.1 * E.Salary AS Hike_Salary
FROM Employee E, Works_On W, Project P
WHERE E.SSN = W.SSN AND W.PNO = P.PNO AND P.PName = 'IOT';

-- d. Find the sum of the salaries of all employees of the ‘Accounts’ department, as well as the maximum, minimum, and average salary in this department:

SELECT SUM(E.Salary), MAX(E.Salary), MIN(E.Salary), AVG(E.Salary)
FROM Employee E, Department D
WHERE E.DNO = D.DNO AND D.DName = 'ACCOUNTS';

--e. Retrieve the name of each employee who works on all the projects controlled by department number 5 (using NOT EXISTS):

SELECT E.Name 
FROM Employee E
WHERE NOT EXISTS (
    (SELECT P.PNO 
     FROM Project P 
     WHERE P.DNO = 5)
    MINUS
    (SELECT W.PNO 
     FROM Works_On W 
     WHERE E.SSN = W.SSN)
);
